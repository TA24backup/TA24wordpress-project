class ListControl{constructor(e,t,o,r,a,s){this.sort_by_distance=e.sort_by_distance,this.show_distance=e.show_distance,this.units=e.units,this.markers=a,this.mapLibrary=s,this.listing_type=e.listing_type,this.number_of_locations=e.number_of_locations,this.store_locator=e.store_locator_options.enable,this.sort_hours_by_day=e.store_locator_options.sort_hours_by_day,this.features=t.concat(o.concat(r)),this.currentPage=1,this.storedBounds=null}storeLocatorHTML(e){return"<div>Download the store locator addon to enable this functionality.</div>"}setHTML(e){var t="<ul>",o=[];this.features.forEach(((e,t)=>{let r=e.data.line?e.data.line:e.data.location?e.data.location:!!e.data.polygon&&e.data.polygon;if(this.show_distance||this.sort_by_distance){var a=turf.distance(turf.center(JSON.parse(r)).geometry.coordinates,[this.map.getCenter().lng,this.map.getCenter().lat]);e.distance=a*("imperial"===this.units?.621371:1)}o.push(e)})),this.sort_by_distance&&(o=o.sort(((e,t)=>e.distance>t.distance?1:-1)));var r=[];if(o.forEach(((e,t)=>{"paginate"===this.listing_type?this.number_of_locations*(this.currentPage-1)<=t&&this.number_of_locations*this.currentPage>t&&r.push(e):r=o})),this.store_locator?t=this.storeLocatorHTML(t,r):r.forEach((e=>{t+=`\n          <li data-id="${e.id}">\n            ${e.title}\n            <em>${e.distance?e.distance.toFixed(2)+("imperial"===this.units?"miles":"km"):""}</em>\n          </li>\n        `})),t+="</ul>","paginate"===this.listing_type&&(t+='<div class="mapster-paging">',this.currentPage>1&&(t+='<span class="mapster-back dashicons dashicons-arrow-left"></span>'),this.number_of_locations*this.currentPage<this.constants.returnMapFeatures().length&&(t+='<span class="mapster-next dashicons dashicons-arrow-right"></span>'),t+="</div>"),e)return t;jQuery(".mapster-list-control-content").html(t)}getStoreHTML(e){return""}addListeners(){var e=this;jQuery(document).on("click",".mapster-list-control li",(function(){var t=e.features.find((e=>parseInt(e.id)==jQuery(this).data("id")));let o=t.data.line?t.data.line:t.data.location?t.data.location:!!t.data.polygon&&t.data.polygon;var r=JSON.parse(o).features[0];if("Point"===r.geometry.type){const o=e.markers.find((e=>e.mapsterProperties.id===t.id));if(o&&t.data.enable_popup){const r=new MapsterHelpers;o.setPopup(new e.mapLibrary.Popup(r.returnPopupOptions(t.data)).setHTML(r.getPopupHTML(t.id,t.data))).togglePopup()}e.map.flyTo({center:r.geometry.coordinates,zoom:15})}else{var a=turf.bbox(r);e.map.fitBounds(a,{padding:20})}e.store_locator&&(jQuery(".mapster-list-control-content").hide(),jQuery(".mapster-list-control-single-content").show(),jQuery(".mapster-list-control-single-content").html(e.getStoreHTML(t)))})),jQuery(document).on("click",".mapster-next",(()=>{this.currentPage=this.currentPage+1,this.setHTML()})),jQuery(document).on("click",".mapster-back",(()=>{this.currentPage=this.currentPage-1,this.setHTML()})),jQuery(document).on("click",".mapster-store-locator-results",(()=>{jQuery(".mapster-list-control-content").show(),jQuery(".mapster-list-control-single-content").hide(),jQuery(".mapster-list-control-single-content").empty(),e.map.fitBounds(e.storedBounds)}))}onAdd(e){this.map=e;return this.storedBounds=this.map.getBounds(),this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl mapster-list-control"+(this.store_locator?" mapster-store-locator":"")+(window.innerWidth<768?" mapster-mobile":""),this._container.innerHTML=`<div class="mapster-list-control-content" style="max-height : ${jQuery(this.map._container).height()-100}px">`+this.setHTML(!0)+`</div><div class="mapster-list-control-single-content" style="max-height : ${jQuery(this.map._container).height()}px;"></div>`,window.innerWidth<768&&(jQuery(this.map._container).css("overflow","visible"),this._container.style.marginTop=`${jQuery(this.map._container).height()}px`,jQuery(this.map._container).after(`<div style="height: ${jQuery(this.map._container).height()}px"></div>`),jQuery(".maplibregl-control-container > div, .mapboxgl-control-container > div").width("100%"),jQuery(".mapboxgl-ctrl-geocoder").width("100%")),this.addListeners(),this.map.on("moveend",(()=>{this.setHTML()})),setTimeout((()=>{this.store_locator&&jQuery(".mapboxgl-ctrl-geocoder").prependTo(".mapster-store-locator")}),100),this._container}onRemove(){this._container.parentNode.removeChild(this._container),this._map=void 0}}class PitchToggle{constructor(e=-20,t=70,o=null){this._bearing=-20,this._pitch=70,this._minpitchzoom=o}onAdd(e){this._map=e;let t=this;return this._btn=document.createElement("button"),this._btn.className="mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d",this._btn.type="button",this._btn["aria-label"]="Toggle Pitch",this._btn.onclick=function(){if(0===e.getPitch()){let o={pitch:t._pitch,bearing:t._bearing};t._minpitchzoom&&e.getZoom()>t._minpitchzoom&&(o.zoom=t._minpitchzoom),e.easeTo(o),t._btn.className="mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-2d"}else e.easeTo({pitch:0,bearing:0}),t._btn.className="mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d"},this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl-group mapboxgl-ctrl",this._container.appendChild(this._btn),this._container}onRemove(){this._container.parentNode.removeChild(this._container),this._map=void 0}}class CategoryControl{constructor(e,t,o,r,a,s,n,i){this.displayMode=e.category_display,this.checkboxMode=e.checkbox_display,this.initialVisibility=e.initial_visibility,this.preSelectedCategories=e.pre_selected_categories,this.independentChildren=e.independent_children,this.functionality=e.functionality,this.markers=t,this.locations=o,this.lines=r,this.polygons=a,this.map_provider=s,this.circle_clustering=n,this.label_icon_clustering=i,this.features=o.concat(r.concat(a))}setMarkers(e){this.markers=e}organizeCategories(){var e=[];return this.features.forEach((t=>{t.categories.forEach((t=>{-1===e.findIndex((e=>e.id===t.id))&&e.push(t)}))})),e}returnHTML(){return`\n      <div>\n        ${this.returnCategoryHTML(this.organizeCategories())}\n      </div>\n    `}returnCategoryHTML(e){var t="<ul>";return e.filter((e=>0===e.parent)).forEach(((o,r)=>{t+=this.returnInputHTML(o),t+=this.returnChildrenHTML(o,e)})),t+="</ul>"}returnChildrenHTML(e,t){var o="<ul>";return t.filter((t=>t.parent===e.id)).forEach((e=>{o+=this.returnInputHTML(e),o+=this.returnChildrenHTML(e,t)})),o+="</ul>"}returnInputHTML(e){var t=!0;return!this.initialVisibility&&this.preSelectedCategories&&-1===this.preSelectedCategories.indexOf(e.id)&&(t=!1),`\n      <li>\n        ${"checkbox"===this.checkboxMode?`\n          <input class="mapster-cat-toggle" data-term="${e.id}" data-parent="${e.parent}" ${t?'checked="checked"':""} type="checkbox" />\n        `:`\n        <label class="mapster-switch">\n          <input class="mapster-cat-toggle" data-term="${e.id}" data-parent="${e.parent}" ${t?'checked="checked"':""} type="checkbox" />\n          <span class="mapster-slider mapster-round"></span>\n        </label>\n        `}\n        ${"colors"===this.displayMode?`<div class="mapster-color-swatch" style="background-color: ${e.color};"></div>`:""}\n        ${e.name}\n      </li>\n    `}setToggles(e){var t=jQuery(e).data("term"),o=jQuery(e).data("parent"),r=jQuery(e).is(":checked");if(!this.independentChildren)if(0===o)r?jQuery(`.mapster-cat-toggle[data-parent="${t}"]`).prop("checked",!0):jQuery(`.mapster-cat-toggle[data-parent="${t}"]`).prop("checked",!1);else if(r)jQuery(`.mapster-cat-toggle[data-term="${o}"]`).prop("checked",!0);else{var a=!0;jQuery(`.mapster-cat-toggle[data-parent="${o}"]`).each((function(){jQuery(this).is(":checked")&&(a=!1)})),a&&jQuery(`.mapster-cat-toggle[data-term="${o}"]`).prop("checked",!1)}}changeLayerVisibility(){var e=this,t=[];jQuery(".mapster-cat-toggle").each((function(){jQuery(this).is(":checked")||t.push(jQuery(this).data("term"))}));var o=[];if(this.features.forEach((e=>{if(e.categories.length>0)if("exclusive"===this.functionality)e.categories.find((e=>t.indexOf(e.id)>-1))&&o.push(e.id);else if("inclusive"===this.functionality){var r=!0;e.categories.forEach((e=>{-1===t.indexOf(e.id)&&(r=!1)})),r&&o.push(e.id)}})),e.map.getLayer("symbol")){if(e.map.getLayer("symbol-clusters")){(new MapsterHelpers).setClustering(e.map,e.map_provider,e.circle_clustering,e.label_icon_clustering,e.locations,e.lines,e.polygons,o)}e.map.setLayoutProperty("symbol","text-size",["case",["in",["get","post_id"],["literal",o]],0,["==",!1,["get","label_label_on"]],0,["has","label_text_properties_text-size"],["to-number",["get","label_text_properties_text-size"]],16]),e.map.setLayoutProperty("symbol","icon-size",["case",["in",["get","post_id"],["literal",o]],0,["==",!1,["get","icon_icon_on"]],0,["has","icon_icon_properties_icon-size"],["/",["to-number",["get","icon_icon_properties_icon-size"]],100],1])}e.map.getLayer("circle")&&e.map.setPaintProperty("circle","circle-radius",["case",["in",["get","post_id"],["literal",o]],0,["has","circle_radius"],["to-number",["get","circle_radius"]],0]),e.map.getLayer("line")&&e.map.setPaintProperty("line","line-width",["case",["in",["get","post_id"],["literal",o]],0,["has","width"],["to-number",["get","width"]],2]),e.map.getLayer("fill")&&e.map.setPaintProperty("fill","fill-opacity",["case",["in",["get","post_id"],["literal",o]],0,["has","opacity"],["/",["to-number",["get","opacity"]],100],1]),e.markers.forEach((o=>{if(o.mapsterProperties.categories.length>0)if("exclusive"===this.functionality)o.mapsterProperties.categories.find((e=>t.indexOf(e.id)>-1))?o.remove():o.addTo(e.map);else if("inclusive"===this.functionality){var r=!0;o.mapsterProperties.categories.length>0&&(o.mapsterProperties.categories.forEach((e=>{-1===t.indexOf(e.id)&&(r=!1)})),r?o.remove():o.addTo(e.map))}}))}addListeners(){var e=this;jQuery(document).on("change",".mapster-cat-toggle",(function(){e.setToggles(this),e.changeLayerVisibility()}))}onAdd(e){return this.map=e,this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl mapster-category-control",this._container.innerHTML=this.returnHTML(),this.initialVisibility||setTimeout((()=>{this.changeLayerVisibility()}),10),this.addListeners(),this._container}onRemove(){this._container.parentNode.removeChild(this._container),this.map=void 0}}class MapsterConstants{returnStyleProviders(){return[{id:"streets",style:"mapbox://styles/mapbox/streets-v10"},{id:"outdoors",style:"mapbox://styles/mapbox/outdoors-v10"},{id:"light",style:"mapbox://styles/mapbox/light-v9"},{id:"dark",style:"mapbox://styles/mapbox/dark-v9"},{id:"satellite",style:"mapbox://styles/mapbox/satellite-v9"},{id:"satellite-streets",style:"mapbox://styles/mapbox/satellite-streets-v10"},{id:"empty",style:{version:8,glyphs:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",sources:{},layers:[{id:"background",type:"background",paint:{"background-color":"rgba(255,255,255,1)"}}]}},{id:"open-street-map",style:this.returnJsonStyle("https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"open-topo-map",style:this.returnJsonStyle("https://a.tile.opentopomap.org/{z}/{x}/{y}.png",'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)')},{id:"cyclo-osm",style:this.returnJsonStyle("https://a.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",'<a href="https://github.com/cyclosm/cyclosm-cartocss-style/releases" title="CyclOSM - Open Bicycle render">CyclOSM</a> | Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"toner-stamen",style:this.returnJsonStyle("https://stamen-tiles.a.ssl.fastly.net/toner/{z}/{x}/{y}.png",'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"watercolor-stamen",style:this.returnJsonStyle("https://stamen-tiles.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png",'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"terrain-stamen",style:this.returnJsonStyle("https://stamen-tiles.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"blank-map",style:this.returnJsonStyle("https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')}]}returnJsonStyle(e,t){return{version:8,glyphs:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",sources:{"raster-tiles":{type:"raster",tiles:[e],tileSize:256,attribution:t}},layers:[{id:"simple-tiles",type:"raster",source:"raster-tiles",minzoom:0,maxzoom:22}]}}loaderHTML(){return'\n\t\t\t<div class="mapster-map-loader">\n\t\t\t\t<svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" stroke="#333">\n\t\t\t\t\t<g fill="none" fill-rule="evenodd">\n\t\t\t\t\t\t\t<g transform="translate(1 1)" stroke-width="2">\n\t\t\t\t\t\t\t\t\t<circle stroke-opacity=".5" cx="18" cy="18" r="18"/>\n\t\t\t\t\t\t\t\t\t<path d="M36 18c0-9.94-8.06-18-18-18">\n\t\t\t\t\t\t\t\t\t\t\t<animateTransform\n\t\t\t\t\t\t\t\t\t\t\t\t\tattributeName="transform"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype="rotate"\n\t\t\t\t\t\t\t\t\t\t\t\t\tfrom="0 18 18"\n\t\t\t\t\t\t\t\t\t\t\t\t\tto="360 18 18"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdur="1s"\n\t\t\t\t\t\t\t\t\t\t\t\t\trepeatCount="indefinite"/>\n\t\t\t\t\t\t\t\t\t</path>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t'}}class MapsterHelpers{constructor(){this.queuedImages=[]}isMobile(){let e=!1;return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(e=!0),e}validateFeatureJSON(e){let t=JSON.parse(e);return Array.isArray(t.features[0].properties)&&(t.features[0].properties={}),t}getStyle(e){const t=new MapsterConstants;if(""!==e.custom_mapbox_style)return e.custom_mapbox_style;if(""!==e.access_token){var o=e.map_tile_style_access_token;return t.returnStyleProviders().find((e=>e.id===o)).style}o=e.map_tile_style_no_access_token;return t.returnStyleProviders().find((e=>e.id===o)).style}addMapControl(e,t,o,r,a,s={}){if(t&&e.removeControl(t),o){const t=new a(s);return e.addControl(t,r),t}return!1}searchLocalFeatures(e,t,o,r){var a=[],s={type:"FeatureCollection",features:[]};return t.concat(o.concat(r)).forEach((e=>{let t=e.data.line?e.data.line:e.data.location?e.data.location:!!e.data.polygon&&e.data.polygon;var o=this.validateFeatureJSON(t);s.features.push(this.makeGeocoderResult(e,o))})),s.features.forEach((t=>{var o=!1;t.properties.searchableTexts.forEach((r=>{if(r&&(r.toLowerCase().indexOf(e.toLowerCase())>-1||" "===e)&&!o){var s={type:"Feature",id:t.properties.id,place_name:t.properties.place_name,center:turf.center(t).geometry.coordinates};"Point"!==t.geometry.type&&(s.bbox=turf.bbox(t)),a.push(s),o=!0}}))})),a.sort(((e,t)=>e.place_name>t.place_name?1:-1)),a}initializeSlider(e,t){var o=jQuery(e).width();jQuery("#mapster-slider").width(o),jQuery("#mapster-slider ul").css({marginLeft:-1*o,width:o*t});const r=e=>{jQuery("#mapster-slider ul").animate({left:jQuery("#mapster-slider ul li").width()*("right"===e?-1:1)},200,(()=>{jQuery("#mapster-slider ul li:first-child").appendTo("#mapster-slider ul"),jQuery("#mapster-slider ul").css("left","")}))};window.sliderClicksInitialized||(jQuery(document).on("click","#mapster-slider .mapster-slider-control_prev",(function(){r("left")})),jQuery(document).on("click","#mapster-slider .mapster-slider-control_next",(function(){r("right")})),window.sliderClicksInitialized=!0)}setClustering(e,t,o,r,a,s,n,i){var p=[];r&&p.push("symbol"),o&&p.push("circle"),p.forEach((t=>{if(e.getLayer(`${t}-cluster-count`)&&e.removeLayer(`${t}-cluster-count`),e.getLayer(`${t}-clusters`)&&e.removeLayer(`${t}-clusters`),e.getLayer(t)&&e.removeLayer(t),e.getSource(t))try{e.removeSource(t)}catch(e){}})),p.forEach((o=>{e.getLayer(o)&&e.getSource(o)&&(e.removeLayer(o),e.removeSource(o));var r=this.createLayerGeoJSON("location",o,a,s,n);i=i||[];var p=r.features.filter((e=>-1===i.indexOf(e.properties.post_id)));e.addSource(o,{type:"geojson",data:{type:"FeatureCollection",features:p},cluster:!0,clusterMaxZoom:14,clusterRadius:50});var l=this.getLayerExpressions("location","symbol"===o?"symbol":"circle",t);e.addLayer({id:o,source:o,type:o,filter:["!",["has","point_count"]],paint:l.paint,layout:l.layout}),this.addIcons(e,o,r),e.addLayer({id:`${o}-clusters`,type:"circle",source:o,filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],"#51bbd6",100,"#f1f075",750,"#f28cb1"],"circle-radius":["step",["get","point_count"],20,100,30,750,40]}}),e.addLayer({id:`${o}-cluster-count`,type:"symbol",source:o,filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":"mapbox"===t?["DIN Offc Pro Medium","Arial Unicode MS Bold"]:["Open Sans Regular"],"text-size":12}}),e.on("click",`${o}-clusters`,(t=>{const r=e.queryRenderedFeatures(t.point,{layers:[`${o}-clusters`]}),a=r[0].properties.cluster_id;e.getSource(o).getClusterExpansionZoom(a,((t,o)=>{e.easeTo({center:r[0].geometry.coordinates,zoom:o+1})}))}))}))}makeGeocoderResult(e,t){var o=t.features[0];return o.properties={searchableTexts:[e.data.popup?e.data.popup.header_text:"",e.data.popup?e.data.popup.body_text:"",e.title,e.content],id:e.id,place_name:e.title},o}modifyDropdown(e){e.container.classList.add("mapster-maps-dropdown");jQuery(".mapster-maps-dropdown").find(".mapboxgl-ctrl-geocoder--icon.mapboxgl-ctrl-geocoder--icon-search").replaceWith('<svg viewBox="0 0 32 32" class="mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-search" viewBox="0 0 32 32" aria-hidden="true">\n      <path d="M24 11.305l-7.997 11.39L8 11.305z"/>\n    </svg>'),jQuery(".mapster-maps-dropdown").find(".mapboxgl-ctrl-geocoder--input").wrap('<div class="input-wrapper"></div>'),jQuery(".mapster-maps-dropdown").find(".mapboxgl-ctrl-geocoder--input").attr("disabled",!0),jQuery(document).on("click",".mapster-maps-dropdown .input-wrapper",(()=>{e.setInput(""),jQuery(".suggestions-wrapper .suggestions li").removeClass("active")})),jQuery(document).on("click",".mapboxgl-ctrl-geocoder--icon.mapboxgl-ctrl-geocoder--icon-close",(()=>{e.clear(),jQuery(".suggestions-wrapper .suggestions").hide()}))}openExternalLink(e){e&&e.data.click_link&&e.data.click_link.url&&(e.data.click_link.open_link_in_new_tab?window.open(e.data.click_link.url):window.open(e.data.click_link.url,"_self"))}getMapBounds(e,t,o){var r={type:"FeatureCollection",features:[]};return[["location",e],["line",t],["polygon",o]].forEach((e=>{e[1].forEach((t=>{var o=this.validateFeatureJSON(t.data[e[0]]);r.features.push(o.features[0])}))})),r.features.length>0?turf.bbox(r):null}openStoreLocatorClick(e,t){e.enable&&jQuery(`.mapster-store-locator-list[data-id="${t}"]`).click()}openSidebarClick(e,t,o,r){!e.enable&&t&&this.setSidebarHTML(o.data,r)}openPopup(e,t,o,r,a,s,n){if(!s.enable&&!n&&(o&&o.remove(),r.data.popup_style)){return new t.Popup(this.returnPopupOptions(r.data)).setLngLat(a).setHTML(this.getPopupHTML(r.id,r.data)).addTo(e)}}getPopupHTML(e,t){var o=this.getPopupStyle(t),r=this.returnPopupCSS(t),a=this.returnPopupLayout(t),s=this.returnPopupContent(t);return a.enable_image&&"gallery"===s.image_type&&setTimeout((()=>{this.initializeSlider(`mapster-popup-${t.popup_style.id}`,s.images.length)}),400),`\n      <style>${o}</style>\n      ${a.use_custom_css?`<style>${r.css_editor.replace(/#mapster-popup/g,`#mapster-popup-${t.popup_style.id}`)}</style>`:""}\n      <div id="mapster-popup-${t.popup_style.id}" class="map-popup-background ${a.popup_class} mapster-feature-popup-${e}">\n        ${a.enable_header?`<div class="map-popup-header">\n            <h2>${s.header_text}</h2>\n          </div>`:""}\n        ${a.enable_image&&"feature-image"===s.image_type?'<div class="map-popup-image"></div>':""}\n        ${a.enable_image&&"gallery"===s.image_type?`<div class="map-popup-gallery">\n            <div id="mapster-slider" style="height : ${r.image_height}px;">\n              <div class="mapster-slider-control_next">></div>\n              <div class="mapster-slider-control_prev"><</div>\n              <ul>\n                ${s.images.map((e=>`<li style="height : ${r.image_height}px; background-image: url(${e});"> </li>`)).join(" ")}\n              </ul>\n            </div>\n          </div>`:""}\n        ${a.enable_body?`<div class="map-popup-body">\n            <p>${s.body_text}</p>\n          </div>`:""}\n        ${a.enable_footer?`<div class="map-popup-footer">\n            ${"do-nothing"===s.button_action?`<button class="map-popup-footer-button">${s.button_text}</button>`:""}\n            ${"to-post"===s.button_action?`<button class="map-popup-footer-button" onclick="${s.open_link_in_new_tab?`window.open('${t.popup.permalink}', '_blank');`:`window.open('${t.popup.permalink}', '_self');`}">\n                ${s.button_text}\n               </button>`:""}\n            ${"to-link"===s.button_action?`<button class="map-popup-footer-button" onclick="${s.open_link_in_new_tab?`window.open('${s.button_url}', '_blank');`:`window.open('${s.button_url}', '_self');`}">\n                ${s.button_text}\n               </button>`:""}\n          </div>`:""}\n      </div>\n    `}getPopupStyle(e){var t=this.returnPopupCSS(e),o=this.returnPopupLayout(e),r=this.returnPopupContent(e),a=e.popup_style.id;return`\n      .mapboxgl-popup .mapboxgl-popup-content, .maplibregl-popup .maplibregl-popup-content {\n        padding: 0px;\n        background: none;\n        border: none;\n        border-radius: none;\n        box-shadow: none;\n      }\n      #mapster-popup-${a}.map-popup-background {\n        background : ${t.background};\n        text-align : ${t.align};\n        border-radius: 3px;\n        box-shadow: 0 1px 2px rgb(0 0 0 / 10%);\n      }\n      #mapster-popup-${a} .map-popup-header {\n        background : ${t.header};\n        padding: 10px;\n      }\n      #mapster-popup-${a} .map-popup-header h2 {\n        all : revert;\n        color : ${t.header_text};\n        font-weight: bold;\n        margin: 0;\n        padding: 0;\n      }\n      #mapster-popup-${a} .map-popup-image {\n        background-image : url(${r.featured_image.url});\n        background-position : center center;\n        background-size: cover;\n        height : ${t.image_height}px;\n        width: 100%;\n      }\n      #mapster-popup-${a} .map-popup-body {\n        margin-top: -1px;\n        background : ${t.body};\n        padding: 10px;\n        color : ${t.body_text};\n      }\n      #mapster-popup-${a} .map-popup-body p {\n        padding: 0px;\n        margin: 0px;\n      }\n      #mapster-popup-${a} .map-popup-footer {\n        margin-top: -1px;\n        background : ${t.footer};\n        padding: 10px;\n      }\n      #mapster-popup-${a} .map-popup-footer .map-popup-footer-button {\n        all : revert;\n        background : ${t.button};\n        border-color: ${t.button};\n        color : ${t.button_text};\n        padding: 5px;\n        text-decoration: none;\n        text-shadow: none;\n      }\n      #mapster-popup-${a} .map-popup-footer .map-popup-footer-button:hover {\n        cursor: pointer;\n        filter: brightness(1.15);\n      }\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-top .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-top .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-top-left .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-top-left .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-top-right .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-top-right .maplibregl-popup-tip {\n        border-bottom-color : ${t.pointer};\n        display : ${o.enable_pointer?"block":"none"};\n      }\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-right .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-right .maplibregl-popup-tip {\n\t\t\t\tborder-left-color : ${t.pointer};\n        display : ${o.enable_pointer?"block":"none"};\n\t\t\t}\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-left .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-left .maplibregl-popup-tip {\n\t\t\t\tborder-right-color : ${t.pointer};\n        display : ${o.enable_pointer?"block":"none"};\n\t\t\t}\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-bottom .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-bottom-left .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-bottom-right .maplibregl-popup-tip {\n        border-top-color : ${t.pointer};\n        display : ${o.enable_pointer?"block":"none"};\n      }\n    `}setSidebarHTML(e,t){var o="#mapster-wp-maps-"+t;jQuery(".mapster-sidebar-popup").remove();var r=jQuery(o).height(),a=jQuery(o).width(),s=this.getPopupStyle(e),n=this.returnPopupCSS(e),i=this.returnPopupLayout(e),p=this.returnPopupContent(e);i.enable_image&&"gallery"===p.image_type&&setTimeout((()=>{this.initializeSlider(`mapster-sidebar-popup-${e.popup_style.id}`,p.images.length)}),400),jQuery(document).on("click",".mapster-sidebar-popup-exit",(()=>{jQuery(".mapster-sidebar-popup").remove()}));const l=`\n      <style>${s.replace(/-popup/g,"-sidebar-popup")}</style>\n      ${i.use_custom_css?`<style>${n.css_editor.replace(/#mapster-popup/g,`#mapster-popup-${e.popup_style.id}`)}</style>`:""}\n      <div id="mapster-sidebar-popup-${e.popup_style.id}" class="mapster-sidebar-popup" style="min-width: 100px; min-height: ${r/2}px; max-height: ${r}px; max-width: ${a/4<250?250:a/4}px;">\n        <div class="mapster-sidebar-popup-exit">&#10006;</div>\n        ${i.enable_header?`<div class="map-sidebar-popup-header">\n            <h2>${p.header_text}</h2>\n          </div>`:""}\n        ${i.enable_image&&"feature-image"===p.image_type?'<div class="map-sidebar-popup-image"></div>':""}\n        ${i.enable_image&&"gallery"===p.image_type?`<div class="map-sidebar-popup-gallery">\n            <div id="mapster-slider" style="height : ${n.image_height}px;">\n              <div class="mapster-slider-control_next">></div>\n              <div class="mapster-slider-control_prev"><</div>\n              <ul>\n                ${p.images.map((e=>`<li style="height : ${n.image_height}px; background-image: url(${e});"> </li>`)).join(" ")}\n              </ul>\n            </div>\n          </div>`:""}\n        ${i.enable_body?`<div class="map-sidebar-popup-body">\n            <p>${p.body_text}</p>\n          </div>`:""}\n        ${i.enable_footer?`<div class="map-sidebar-popup-footer">\n            ${"do-nothing"===p.button_action?`<button class="map-sidebar-popup-footer-button">${p.button_text}</button>`:""}\n            ${"to-post"===p.button_action?`<button class="map-sidebar-popup-footer-button" onclick="${p.open_link_in_new_tab?`window.open('${e.popup.permalink}', '_blank');`:`window.open('${e.popup.permalink}', '_self');`}">\n                ${p.button_text}\n               </button>`:""}\n            ${"to-link"===p.button_action?`<button class="map-sidebar-popup-footer-button" onclick="${p.open_link_in_new_tab?`window.open('${p.button_url}', '_blank');`:`window.open('${p.button_url}', '_self');`}">\n                ${p.button_text}\n               </button>`:""}\n          </div>`:""}\n      </div>\n    `;jQuery(o).append(l)}returnPopupContent(e){return{header_text:e.popup.header_text,image_type:e.popup.image_type,featured_image:e.popup.featured_image,images:e.popup.images,body_text:e.popup.body_text,button_text:e.popup.button_text,button_action:e.popup.button_action,button_url:e.popup.button_url,open_link_in_new_tab:e.popup.open_link_in_new_tab}}returnPopupLayout(e){return{enable_header:e.popup_style.enable_header,enable_image:e.popup_style.enable_image,enable_body:e.popup_style.enable_body,enable_footer:e.popup_style.enable_footer,enable_pointer:e.popup_style.enable_pointer,use_custom_css:e.popup_style.use_custom_css,popup_class:e.popup_style.popup_class}}returnPopupOptions(e){return{closeButton:e.popup_style.close_button,closeOnClick:e.popup_style.close_on_click,closeMapMove:e.popup_style.close_on_map_move,maxWidth:e.popup_style.max_width+"px"}}returnPopupCSS(e){return{background:e.popup_style.background,header:e.popup_style.header,image_height:e.popup_style.image_height,body:e.popup_style.body,footer:e.popup_style.footer,button:e.popup_style.button,pointer:e.popup_style.pointer,header_text:e.popup_style.header_text,body_text:e.popup_style.body_text,button_text:e.popup_style.button_text,align:e.popup_style.align,css_editor:e.popup_style.css_editor,max_width:e.popup_style.max_width}}getMarkerStyles(e){var t=e.data;return{color:t.marker.color,scale:parseFloat(t.marker.scale)/100,rotation:parseFloat(t.marker.rotation),anchor:t.marker.anchor}}getLayerExpressions(e,t,o){if("line"===e)return{layout:{},paint:{"line-color":["case",["has","color"],["get","color"],"#000"],"line-opacity":["case",["has","opacity"],["/",["to-number",["get","opacity"]],100],1],"line-width":["case",["has","width"],["to-number",["get","width"]],2],"line-dasharray":"mapbox"===o?["case",["==",!0,["to-boolean","dashed_line"]],["get","dash_properties_line_dash_array"],["literal",[1,0]]]:[1,0]}};if("polygon"===e)return{layout:{},paint:{"fill-color":["case",["has","color"],["get","color"],"#000"],"fill-opacity":["case",["has","opacity"],["/",["to-number",["get","opacity"]],100],1],"fill-outline-color":["case",["has","outline-color"],["get","outline-color"],"rgba(0,0,0,0)"]}};if("location"===e){if("circle"===t)return{layout:{},paint:{"circle-color":["case",["has","circle_color"],["get","circle_color"],"#000"],"circle-opacity":["case",["has","circle_opacity"],["/",["to-number",["get","circle_opacity"]],100],1],"circle-radius":["case",["has","circle_radius"],["to-number",["get","circle_radius"]],0],"circle-stroke-width":["case",["has","circle_stroke-width"],["to-number",["get","circle_stroke-width"]],0],"circle-stroke-color":["case",["has","circle_stroke-color"],["get","circle_stroke-color"],"#000"],"circle-stroke-opacity":["case",["has","circle_stroke-opacity"],["/",["to-number",["get","circle_stroke-opacity"]],100],1]}};if("symbol"===t)return{layout:{"text-field":["case",["has","label_text_properties_text-field"],["get","label_text_properties_text-field"],"New Text"],"text-font":["case",["==","Open Sans Regular",["get","label_text_properties_text-font"]],["literal",["Open Sans Regular"]],["==","Open Sans Bold",["get","label_text_properties_text-font"]],["literal",["Open Sans Bold"]],["==","Open Sans Italic",["get","label_text_properties_text-font"]],["literal",["Open Sans Italic"]],["==","Klokantech Noto Sans Regular",["get","label_text_properties_text-font"]],["literal",["Klokantech Noto Sans Regular"]],["==","Klokantech Noto Sans Bold",["get","label_text_properties_text-font"]],["literal",["Klokantech Noto Sans Bold"]],["==","Klokantech Noto Sans Italic",["get","label_text_properties_text-font"]],["literal",["Klokantech Noto Sans Italic"]],["==","Metropolis",["get","label_text_properties_text-font"]],["literal",["Metropolis"]],["==","Metropolis Bold",["get","label_text_properties_text-font"]],["literal",["Metropolis Bold"]],["==","Metropolis Regular Italic",["get","label_text_properties_text-font"]],["literal",["Metropolis Regular Italic"]],["literal",["Open Sans Regular"]]],"text-rotate":["case",["has","label_text_properties_text-rotate"],["to-number",["get","label_text_properties_text-rotate"]],0],"text-size":["case",["==",!1,["get","label_label_on"]],0,["has","label_text_properties_text-size"],["to-number",["get","label_text_properties_text-size"]],16],"icon-size":["case",["==",!1,["get","icon_icon_on"]],0,["has","icon_icon_properties_icon-size"],["/",["to-number",["get","icon_icon_properties_icon-size"]],100],1],"icon-rotate":["case",["has","icon_icon_properties_icon-rotate"],["to-number",["get","icon_icon_properties_icon-rotate"]],0],"icon-allow-overlap":!0,"icon-ignore-placement":!0,"icon-anchor":["case",["has","icon_icon_properties_icon-anchor"],["get","icon_icon_properties_icon-anchor"],"center"],"icon-offset":["case",["has","icon_icon_properties_offset_array"],["get","icon_icon_properties_offset_array"],["literal",[0,0]]],"text-offset":["case",["has","label_text_properties_offset_array"],["get","label_text_properties_offset_array"],["literal",[0,0]]]},paint:{"text-color":["case",["has","label_text_properties_text-color"],["get","label_text_properties_text-color"],"#000000"],"text-halo-width":["case",["has","label_text_properties_text-halo-width"],["to-number",["get","label_text_properties_text-halo-width"]],1],"text-halo-color":["case",["has","label_text_properties_text-halo-color"],["get","label_text_properties_text-halo-color"],"#FFFFFF"],"text-halo-blur":["case",["has","label_text_properties_text-halo-blur"],["/",["to-number",["get","label_text_properties_text-halo-blur"]],100],1],"text-opacity":["case",["has","label_text_properties_text-opacity"],["/",["to-number",["get","label_text_properties_text-opacity"]],100],1],"icon-opacity":["case",["has","icon_icon_properties_icon-opacity"],["/",["to-number",["get","icon_icon_properties_icon-opacity"]],100],1]}}}}addIcons(e,t,o){"symbol"===t&&o.features.forEach((t=>{t.properties.icon_icon_on&&t.properties["icon_icon_properties_icon-image_url"]&&this.addNewIcon(e,t.properties["icon_icon_properties_icon-image_url"],t.properties["icon_icon_properties_icon-image_id"],(()=>{e.setLayoutProperty("symbol","icon-image",["case",["has","icon_icon_properties_icon-image_id"],["concat","icon-image-",["get","icon_icon_properties_icon-image_id"]],"none"])}))}))}addNewIcon(e,t,o,r){if(this.queuedImages.indexOf(`icon-image-${o}`)>-1)r();else{this.queuedImages.push(`icon-image-${o}`),t||r(),"https:"===window.location.protocol&&t.indexOf("http://")>-1&&(t=t.replace("http","https"));var a=new Image;a.src=t,a.crossOrigin="",a.onload=function(){e.loaded()?(e.hasImage(`icon-image-${o}`)?e.updateImage(`icon-image-${o}`,a):e.addImage(`icon-image-${o}`,a),r()):e.once("idle",(()=>{e.hasImage(`icon-image-${o}`)?e.updateImage(`icon-image-${o}`,a):e.addImage(`icon-image-${o}`,a),r()}))}}}createLayerGeoJSON(e,t,o,r,a){var s={type:"FeatureCollection",features:[]};return("line"===e?r:"location"===e?o:"polygon"===e?a:[]).forEach((o=>{if(o.data[e]&&t===this.getLayerType(e,o.data)){var r=this.validateFeatureJSON(o.data[e]);if(r.features[0]){var a=this.makeFeatureWithProperties(o,r.features[0]);s.features.push(a)}}})),s}makeFeatureWithProperties(e,t){var o=JSON.parse(JSON.stringify(t));for(var r in o.id=e.id,o.properties.post_id=e.id,e.data)-1===["polygon","line","location","popup","popup_style"].indexOf(r)&&this.assignToProperty(o,e.data,r);return o.properties.dash_properties_dash_length&&(o.properties.dash_properties_line_dash_array=[parseFloat(o.properties.dash_properties_dash_length),parseFloat(o.properties.dash_properties_gap_length)]),o.properties["label_text_properties_text-translate-x"]&&(o.properties.label_text_properties_offset_array=[parseFloat(o.properties["label_text_properties_text-translate-x"]),parseFloat(o.properties["label_text_properties_text-translate-y"])]),o.properties["icon_icon_properties_icon-translate-x"]&&(o.properties.icon_icon_properties_offset_array=[parseFloat(o.properties["icon_icon_properties_icon-translate-x"]),parseFloat(o.properties["icon_icon_properties_icon-translate-y"])]),o}assignToProperty(e,t,o,r){if("object"==typeof t[o])for(var a in t[o])this.assignToProperty(e,t[o],a,r?r+"_"+o:o);else{var s=r?r+"_"+o:o;e.properties[s]=t[o]}}getLayerType(e,t){if("line"===e)return"line";if("polygon"===e)return"fill";if("location"===e){if("circle"===t.location_style)return"circle";if("label"===t.location_style)return"symbol"}}}class MapsterCore{constructor(){}getPostData({post_id:e}){return fetch(`${window.params.rest_url}mapster-wp-maps/map?id=${e}`).then((e=>e.json()))}getFeaturesAdmin({locations_ids:e,lines_ids:t,polygons_ids:o,cats:r}){const a=e.concat(t.concat(o));return fetch(`${window.params.rest_url}mapster-wp-maps/features?ids=${JSON.stringify(a)}&categories=${JSON.stringify(r)}`).then((e=>e.json()))}sortLocations({adminFeatures:e}){return e.filter((e=>e.data.location))}sortLines({adminFeatures:e}){return e.filter((e=>e.data.line))}sortPolygons({adminFeatures:e}){return e.filter((e=>e.data.polygon))}doClustering({map:e,map_provider:t,circle_clustering:o,label_icon_clustering:r,locations:a,lines:s,polygons:n,idsToHide:i}){(new MapsterHelpers).setClustering(e,t,o,r,a,s,n,i)}loadCustomScripts({map:e,javascript:t,locations:o,lines:r,polygons:a}){t&&(0,window[t])(e,o.concat(r.concat(a)))}setMapStyle({map:e,map_type:t}){const o=new MapsterHelpers;e.setStyle(o.getStyle(t))}loadTerrain({map:e,map_provider:t,terrain:o}){"mapbox"===t&&(o?(e.addSource("mapbox-dem",{type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512,maxzoom:14}),e.setTerrain({source:"mapbox-dem",exaggeration:1.5}),e.addLayer({id:"sky",type:"sky",paint:{"sky-type":"atmosphere","sky-atmosphere-sun":[0,0],"sky-atmosphere-sun-intensity":15}})):(e.getLayer("sky")&&e.removeLayer("sky"),e.setTerrain(null),e.getSource("mapbox-dem")&&e.removeSource("mapbox-dem")))}layerClick({map:e,interactivity:t,clickedEvent:o,locations:r,lines:a,polygons:s}){if(t){var n=e.queryRenderedFeatures(o.point,{layers:["symbol","circle","line","fill"]});if(n[0]&&("fill"!==n[0].layer.id||"fill"===n[0].layer.id&&0!==n[0].layer.paint["fill-opacity"])){return r.concat(a.concat(s)).find((e=>e.id===n[0].properties.post_id))}return!1}return!1}storeLocatorClick({clickedFeature:e,store_locator_options:t}){const o=new MapsterHelpers;e&&e.data.enable_popup&&("click"===e.data.interaction||o.isMobile()&&e.data.click_on_mobile)&&o.openStoreLocatorClick(t,e.id)}sidebarClick({post_id:e,clickedFeature:t,store_locator_options:o,open_popups_in_sidebar:r}){const a=new MapsterHelpers;t&&t.data.enable_popup&&("click"===t.data.interaction||a.isMobile()&&t.data.click_on_mobile)&&a.openSidebarClick(o,r,t,e)}externalClickLayer({clickedFeature:e}){(new MapsterHelpers).openExternalLink(e)}externalClickMarker({clickedMarker:e}){(new MapsterHelpers).openExternalLink(e)}popupClick({map:e,mapLibrary:t,clickedPopup:o,clickedFeature:r,clickedEvent:a,store_locator_options:s,open_popups_in_sidebar:n}){const i=new MapsterHelpers;if(r&&r.data.enable_popup&&("click"===r.data.interaction||i.isMobile()&&r.data.click_on_mobile))return i.openPopup(e,t,o,r,a.lngLat,s,n)}layerHover({map:e,interactivity:t,hoveredEvent:o,locations:r,lines:a,polygons:s}){if(t){var n=e.queryRenderedFeatures(o.point,{layers:["symbol","circle","line","fill"]});if(n[0]&&("fill"!==n[0].layer.id||"fill"===n[0].layer.id&&0!==n[0].layer.paint["fill-opacity"])){return r.concat(a.concat(s)).find((e=>e.id===n[0].properties.post_id))}return!1}return!1}popupHover({map:e,mapLibrary:t,hoveredPopup:o,hoveredFeature:r,hoveredEvent:a,store_locator_options:s,interactivity:n}){const i=new MapsterHelpers;if(r&&r.data.enable_popup&&("hover"===r.data.interaction||i.isMobile()&&r.data.click_on_mobile))return i.openPopup(e,t,o,r,a.lngLat,s,n)}markerClick({interactivity:e,clickedMarker:t}){return!!e&&t.mapsterProperties}markerHover({interactivity:e,hoveredMarker:t}){return!!e&&t.mapsterProperties}openMarkerClickPopup({mapLibrary:e,clickedMarker:t,clickedFeature:o,store_locator_options:r,open_popups_in_sidebar:a}){const s=new MapsterHelpers;r.enable||a||o&&o.data.enable_popup&&("click"===o.data.interaction||s.isMobile()&&o.data.click_on_mobile)&&o.data.popup_style&&t.setPopup(new e.Popup(s.returnPopupOptions(o.data)).setHTML(s.getPopupHTML(o.id,o.data)))}openMarkerHoverPopup({mapLibrary:e,hoveredMarker:t,hoveredFeature:o}){const r=new MapsterHelpers;o&&o.data.enable_popup&&"hover"===o.data.interaction&&o.data.popup_style&&t.setPopup(new e.Popup(r.returnPopupOptions(o.data)).setHTML(r.getPopupHTML(o.id,o.data))).togglePopup()}removeMarkerHoverPopup({hoveredMarker:e,hoveredFeature:t}){t&&t.data.enable_popup&&"hover"===t.data.interaction&&e.setPopup(null)}removePopupHover({hoveredFeature:e,hoveredPopup:t}){t&&!e.data.keep_popup_open_on_hover&&t.remove()}setInteractivity({map:e,zoom_on_scroll:t,interactivity:o}){t||e.scrollZoom.disable(),o||(e.scrollZoom.disable(),e.boxZoom.disable(),e.dragRotate.disable(),e.dragPan.disable(),e.keyboard.disable(),e.doubleClickZoom.disable(),e.touchZoomRotate.disable())}setFeaturesToMap({map:e,map_provider:t,locations:o,lines:r,polygons:a}){const s=new MapsterHelpers;[["line","line"],["polygon","fill"],["location","circle"],["location","symbol"]].forEach((n=>{var i=s.createLayerGeoJSON(n[0],n[1],o,r,a);if(e.getSource(n[1]))e.getSource(n[1]).setData(i);else{e.addSource(n[1],{type:"geojson",data:i});var p=s.getLayerExpressions(n[0],n[1],t);e.addLayer({id:n[1],source:n[1],type:n[1],paint:p.paint,layout:p.layout}),s.addIcons(e,n[1],i)}}))}setMarkersToMap({map:e,markers:t,mapLibrary:o,locations:r}){const a=new MapsterHelpers;let s=[];t.forEach((e=>{r.find((t=>t.id===e.id))?s.push(e):e.remove()}));let n=[];n=n.concat(s);const i=r.filter((e=>"marker"===e.data.location_style));return i.sort(((e,t)=>JSON.parse(e.data.location).features[0].geometry.coordinates[1]>JSON.parse(t.data.location).features[0].geometry.coordinates[1]?-1:1)),i.forEach((t=>{if(!s.find((e=>e.mapsterProperties.id===t.id))){var r=a.getMarkerStyles(t),i=a.validateFeatureJSON(t.data.location).features[0].geometry.coordinates,p=new o.Marker(r).setLngLat(i);p.mapsterProperties=t,p.addTo(e),n.push(p)}})),n}setMapSize({post_id:e,layout:t}){var o="#mapster-wp-maps-"+e;t.full_page||(jQuery(o).height(t.height+t.height_units),jQuery(o).width(t.width+t.width_units)),t.full_page&&(jQuery(o).height(window.innerHeight+t.height_units),jQuery(o).width("100%")),t.full_page&&t.ignore_container&&(jQuery(`<div id="margin-compensator" style="padding-bottom: ${window.innerHeight}px"></div>`).insertAfter(o),jQuery(o).css("marginLeft",-1*jQuery(o).offset().left+"px"),jQuery(o).css("position","absolute"))}setDefaultAccessToken(){""===jQuery('.acf-field[data-name="access_token"]').find(":input").val()&&jQuery('.acf-field[data-name="access_token"]').find(":input").val(window.params.mapbox_access_token)}setMapType({map_type:e}){if("mapbox"===e.map_provider){if(""!==e.access_token)return mapboxgl.accessToken=e.access_token,mapboxgl;window.alert("You must enter an access token to use Mapbox.")}else if("maplibre"===e.map_provider)return""!==e.access_token&&(maplibregl.accessToken=e.access_token),maplibregl}setMap({post_id:e,mapLibrary:t,map:o,locations:r,lines:a,polygons:s}){var n="mapster-wp-maps-"+e;const i=new MapsterHelpers,p={renderWorldCopies:o.layout.duplicate_horizontally,style:i.getStyle(o.map_type),container:n,fitBoundsOptions:{padding:20},bounds:"fit-features"===o.view.initial_load?i.getMapBounds(r,a,s):null,center:"manual"===o.view.initial_load?[parseFloat(o.view.manual_longitude),parseFloat(o.view.manual_latitude)]:[0,0],zoom:"manual"===o.view.initial_load?parseFloat(o.view.manual_zoom):2};return new t.Map(p)}setLoader({post_id:e}){const t=new MapsterConstants;jQuery("#mapster-wp-maps-"+e).append(t.loaderHTML())}setLoaderDone({post_id:e}){jQuery("#mapster-wp-maps-"+e+" .mapster-map-loader").fadeOut()}setMapResize({map:e}){e.resize()}setZoomControl({map:e,mapLibrary:t,controls:o,zoom_control:r}){return(new MapsterHelpers).addMapControl(e,o.zoomControl,r.enable,r.position,t.NavigationControl)}set3DControl(e){const{map:t,mapLibrary:o,controls:r}=e;return(new MapsterHelpers).addMapControl(t,r["3dControl"],e["3d_control"].enable,e["3d_control"].position,PitchToggle)}setScaleControl({map:e,mapLibrary:t,controls:o,scale_control:r}){return(new MapsterHelpers).addMapControl(e,o.scaleControl,r.enable,r.position,t.ScaleControl)}setGeolocationControl({map:e,mapLibrary:t,controls:o,geolocation_control:r}){return(new MapsterHelpers).addMapControl(e,o.geolocationControl,r.enable,r.position,t.GeolocateControl)}setFullscreenControl({map:e,mapLibrary:t,controls:o,fullscreen_control:r}){return(new MapsterHelpers).addMapControl(e,o.fullscreenControl,r.enable,r.position,t.FullscreenControl)}setGeocoderControl({map:e,mapLibrary:t,controls:o,geocoder_control:r}){const a=new MapsterHelpers;if("undefined"!=typeof MapboxGeocoder){var s={accessToken:t.accessToken,mapboxgl:t};return a.addMapControl(e,o.geocoderControl,r.enable,r.position,MapboxGeocoder,s)}}setDirectionsControl({map:e,mapLibrary:t,controls:o,directions_control:r}){if("undefined"!=typeof MapboxDirections){const s=new MapsterHelpers;var a={accessToken:t.accessToken,mapboxgl:t,unit:r.unit,profile:r.profile,placeholderOrigin:r.placeholderOrigin};return s.addMapControl(e,o.directionsControl,r.enable,r.position,MapboxDirections,a)}}setCustomSearchFilterControl({map:e,mapLibrary:t,controls:o,custom_search_filter:r,locations:a,lines:s,polygons:n}){const i=new MapsterHelpers;if("undefined"!=typeof MapboxGeocoder){var p={mapboxgl:t};return r.include_geocoder?p.accessToken=t.accessToken:p.localGeocoderOnly=!0,""!==r.countries&&(p.countries=r.countries),p.localGeocoder=e=>i.searchLocalFeatures(e,a,s,n),i.addMapControl(e,o.customSearchControl,r.enable,r.position,MapboxGeocoder,p)}}setFilterDropdownControl({map:e,mapLibrary:t,controls:o,filter_dropdown:r,locations:a,lines:s,polygons:n,markers:i}){const p=new MapsterHelpers;if("undefined"!=typeof MapboxGeocoder){var l={mapboxgl:t,localGeocoderOnly:!0,marker:!1,placeholder:r.placeholder,minLength:0,limit:1e3,localGeocoder:e=>p.searchLocalFeatures(e,a,s,n)};const c=p.addMapControl(e,o.filterDropdownControl,r.enable,r.position,MapboxGeocoder,l);if(c)return r.enable&&p.modifyDropdown(c),c.on("result",(e=>{const o=i.find((t=>t.mapsterProperties.id===e.result.id));o&&o.mapsterProperties.data.enable_popup&&o.setPopup(new t.Popup(p.returnPopupOptions(o.mapsterProperties.data)).setHTML(p.getPopupHTML(o.mapsterProperties.id,o.mapsterProperties.data))).togglePopup()})),c}}setCategoryFilterControl({map:e,mapLibrary:t,controls:o,category_filter:r,markers:a,locations:s,lines:n,polygons:i,map_provider:p,label_icon_clustering:l,circle_clustering:c}){new MapsterHelpers;const d={functionality:r.functionality,independent_children:r.independent_children,initial_visibility:r.initial_visibility,category_display:r.category_display,checkbox_display:r.checkbox_display,pre_selected_categories:r.pre_selected_categories};if(o.categoryFilterControl&&e.removeControl(o.categoryFilterControl),r.enable){const t=new CategoryControl(d,a,s,n,i,p,c,l);return e.addControl(t,r.position),t}return!1}setListControl({map:e,mapLibrary:t,controls:o,list:r,locations:a,lines:s,polygons:n,markers:i}){new MapsterHelpers;if(o.listControl&&e.removeControl(o.listControl),r.enable){const o=new ListControl(r,a,s,n,i,t);return e.addControl(o,r.position),o}return!1}}class MapsterContainer{constructor(e,t){this.core={},this.MapsterMap=t,this.post_id=e,this.postResponse,this.mapLibrary,this.markers=[],this.controls=[],this.clickedEvent,this.clickedFeature,this.clickedPopup,this.clickedMarker,this.hoveredEvent,this.hoveredFeature,this.hoveredPopup,this.hoveredMarker,this.map,this.postResponseAdmin,this.adminFeatures,this.defineCore()}defineCore(){const e=new MapsterCore;this.core.set_accesstokendefault={args:[],hook:"access_token_set",func:e.setDefaultAccessToken},this.core.define_postResponse={args:["post_id"],hook:"data_fetched",func:e.getPostData,promise:!0},this.core.set_mapSize={args:["post_id","postResponse.map.layout"],hook:"map_size_set",func:e.setMapSize},this.core.define_mapLibrary={args:["postResponse.map.map_type"],hook:"map_library_set",func:e.setMapType},this.core.define_map={args:["post_id","mapLibrary","postResponse.map","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"map_set",func:e.setMap},this.core.set_loader={args:["post_id"],hook:"loading_icon_started",func:e.setLoader},this.core.set_loaderdone={args:["post_id"],hook:"loading_icon_done",func:e.setLoaderDone},this.core.set_mapresize={args:["map"],hook:"map_resize_set",func:e.setMapResize},this.core.set_mapfeatures={args:["map","postResponse.map.map_type.map_provider","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"map_features_set",func:e.setFeaturesToMap,callback:this.MapsterMap.setLayerEvents},this.core.define_markers={args:["map","markers","mapLibrary","postResponse.locations"],hook:"map_markers_set",func:e.setMarkersToMap,callback:this.MapsterMap.setMarkerEvents},this.core["define_controls.zoomControl"]={args:["map","mapLibrary","controls","postResponse.map.zoom_control"],hook:"zoom_control_set",func:e.setZoomControl},this.core["define_controls.geocoderControl"]={args:["map","mapLibrary","controls","postResponse.map.geocoder_control"],hook:"geocoder_control_set",func:e.setGeocoderControl},this.core["define_controls.directionsControl"]={args:["map","mapLibrary","controls","postResponse.map.directions_control"],hook:"directions_control_set",func:e.setDirectionsControl},this.core["define_controls.3dControl"]={args:["map","mapLibrary","controls","postResponse.map.3d_control"],hook:"3d_control_set",func:e.set3DControl},this.core["define_controls.scaleControl"]={args:["map","mapLibrary","controls","postResponse.map.scale_control"],hook:"scale_control_set",func:e.setScaleControl},this.core["define_controls.geolocationControl"]={args:["map","mapLibrary","controls","postResponse.map.geolocation_control"],hook:"geolocation_control_set",func:e.setGeolocationControl},this.core["define_controls.fullscreenControl"]={args:["map","mapLibrary","controls","postResponse.map.fullscreen_control"],hook:"fullscreen_control_set",func:e.setFullscreenControl},this.core["define_controls.customSearchControl"]={args:["map","mapLibrary","controls","postResponse.map.filter.custom_search_filter","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"customSearch_control_set",func:e.setCustomSearchFilterControl},this.core["define_controls.filterDropdownControl"]={args:["map","mapLibrary","controls","postResponse.map.filter.filter_dropdown","postResponse.locations","postResponse.lines","postResponse.polygons","markers"],hook:"filterDropdown_control_set",func:e.setFilterDropdownControl},this.core["define_controls.categoryFilterControl"]={args:["map","mapLibrary","controls","postResponse.map.filter.category_filter","markers","postResponse.locations","postResponse.lines","postResponse.polygons","postResponse.map.map_type.map_provider","postResponse.map.circle_clustering","postResponse.map.label_icon_clustering"],hook:"categoryFilter_control_set",func:e.setCategoryFilterControl},this.core["define_controls.listControl"]={args:["map","mapLibrary","controls","postResponse.map.list","postResponse.locations","postResponse.lines","postResponse.polygons","markers"],hook:"list_control_set",func:e.setListControl},this.core.set_clustering={args:["map","postResponse.map.map_type.map_provider","postResponse.map.circle_clustering","postResponse.map.label_icon_clustering","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"map_clustering_set",func:e.doClustering},this.core.set_customscripts={args:["map","postResponse.map.javascript","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"custom_scripts_set",func:e.loadCustomScripts},this.core.set_interactivity={args:["map","postResponse.map.zoom_on_scroll","postResponse.map.interactivity"],hook:"interactivity_set",func:e.setInteractivity},this.core.set_mapstyle={args:["map","postResponse.map.map_type"],hook:"map_style_set",func:e.setMapStyle,callback:this.MapsterMap.idleReload},this.core.set_terrain={args:["map","postResponse.map.map_type.map_provider","postResponse.map.map_type.terrain"],hook:"map_terrain_set",func:e.loadTerrain},this.core.define_clickedFeature={args:["map","postResponse.map.interactivity","clickedEvent","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"layer_feature_clicked",func:e.layerClick},this.core.set_storelocatorclick={args:["clickedFeature","postResponse.map.list.store_locator_options"],hook:"",func:e.storeLocatorClick},this.core.set_sidebarclick={args:["post_id","clickedFeature","postResponse.map.list.store_locator_options","postResponse.map.open_popups_in_sidebar"],hook:"",func:e.sidebarClick},this.core.define_clickedPopup={args:["map","mapLibrary","clickedPopup","clickedFeature","clickedEvent","postResponse.map.list.store_locator_options","postResponse.map.open_popups_in_sidebar"],hook:"popup_opened_from_layer_click",func:e.popupClick},this.core.define_hoveredFeature={args:["map","postResponse.map.interactivity","hoveredEvent","postResponse.locations","postResponse.lines","postResponse.polygons"],hook:"layer_feature_hovered",func:e.layerHover},this.core.define_hoveredPopup={args:["map","mapLibrary","hoveredPopup","hoveredFeature","hoveredEvent","postResponse.map.list.store_locator_options","postResponse.map.open_popups_in_sidebar"],hook:"popup_opened_from_layer_hover",func:e.popupHover},this.core.set_hoveredPopupOff={args:["hoveredFeature","hoveredPopup"],hook:"popup_closed_from_layer_hover",func:e.removePopupHover},this.core.set_externallink={args:["clickedFeature"],hook:"external_link_opened",func:e.externalClickLayer},this.core.define_clickedFeature_fromMarker={args:["clickedMarker","postResponse.map.interactivity"],hook:"marker_feature_clicked",func:e.markerClick},this.core.define_hoveredFeature_fromMarker={args:["hoveredMarker","postResponse.map.interactivity"],hook:"marker_feature_hovered",func:e.markerHover},this.core.set_clickedPopup_fromMarker={args:["mapLibrary","clickedMarker","clickedFeature","postResponse.map.list.store_locator_options","postResponse.map.open_popups_in_sidebar"],hook:"popup_opened_from_marker_click",func:e.openMarkerClickPopup},this.core.set_hoveredPopup_fromMarker={args:["mapLibrary","hoveredMarker","hoveredFeature"],hook:"popup_opened_from_marker_hover",func:e.openMarkerHoverPopup},this.core.set_hoveredPopupOff_fromMarker={args:["hoveredMarker","hoveredFeature"],hook:"popup_closed_from_marker_hover",func:e.removeMarkerHoverPopup},this.core.define_adminFeatures={args:["postResponseAdmin.locations_ids","postResponseAdmin.lines_ids","postResponseAdmin.polygons_ids","postResponse.cats"],hook:"",func:e.getFeaturesAdmin,promise:!0},this.core["define_postResponse.locations"]={args:["adminFeatures"],hook:"locations_fetched",func:e.sortLocations},this.core["define_postResponse.lines"]={args:["adminFeatures"],hook:"lines_fetched",func:e.sortLines},this.core["define_postResponse.polygons"]={args:["adminFeatures"],hook:"polygons_fetched",func:e.sortPolygons}}doCore(e){let t=this.core[e].args,o=this.core[e].func,r={};for(var a=0;a<t.length;a++){let e=t[a].split(".");r[e[e.length-1]]=this.getObjectProperty(this,t[a])}if(this.core[e].promise)return Promise.resolve(o(r)).then((t=>{this.defineThisObject(e,t),this.core[e].callback&&this.core[e].callback(this,this.MapsterMap),this.core[e].hook&&this.MapsterMap.runHookActions(e,t)}));{const t=o(r);return this.defineThisObject(e,t),this.core[e].callback&&this.core[e].callback(this,this.MapsterMap),this.core[e].hook&&this.MapsterMap.runHookActions(e,t),t}}registerListener(e,t,o,r){this.setStarterValue(e,t,o),jQuery(document).on("change","select"!==t?e:e.replace("select",":input"),(()=>{if("check"===t&&this.setObjectProperty(this,o,jQuery(e).is(":checked")),"val"===t&&this.setObjectProperty(this,o,jQuery(e).val()),"select"===t&&this.setObjectProperty(this,o,jQuery(e).select2("data").map((e=>e.id))),r&&r.length>0)for(var a=0;a<r.length;a++){if(this.core[r[a]].promise){this.MapsterMap.doCoreAndRunActions(r[a]).then((()=>{for(var e=a+1;e<r.length;e++)this.MapsterMap.doCoreAndRunActions(r[e])}));break}this.MapsterMap.doCoreAndRunActions(r[a])}}))}setStarterValue(e,t,o){"check"===t&&this.setObjectProperty(this,o,jQuery(e).is(":checked")),"val"===t&&this.setObjectProperty(this,o,jQuery(e).val()),"select"===t&&this.setObjectProperty(this,o,jQuery(e).select2("data").map((e=>e.id)))}defineThisObject(e,t){e.indexOf("define_")>-1&&this.setObjectProperty(this,e.split("_")[1],t)}getObjectProperty(e,t){return t.split(".").reduce(((e,t)=>e?.[t]),e)}setObjectProperty(e,t,o){t.split(".").reduce(((e,r)=>(r===t.split(".")[t.split(".").length-1]&&(e[r]=o),void 0===e[r]&&(r===t.split(".")[t.split(".").length-1]?e[r]="":e[r]={}),e?.[r])),e)}}class MapsterMap{constructor(e,t){this.MapsterContainer=new MapsterContainer(e,this),this.post_id=e,this.isPublic=t,this.isPublic||this.registerAdminEventListeners()}preInitMap(){return this.isPublic?this.doCoreAndRunActions("define_postResponse"):this.doCoreAndRunActions("define_adminFeatures")}init(){this.preInitMap().then((()=>{this.isPublic||(this.doCoreAndRunActions("set_accesstokendefault"),this.doCoreAndRunActions("define_postResponse.locations"),this.doCoreAndRunActions("define_postResponse.lines"),this.doCoreAndRunActions("define_postResponse.polygons")),this.initMap(),this.MapsterContainer.map.on("load",(()=>{this.postLoad()}))}))}initMap(){this.isPublic&&this.doCoreAndRunActions("set_mapSize"),this.doCoreAndRunActions("define_mapLibrary"),this.doCoreAndRunActions("define_map"),this.doCoreAndRunActions("set_loader"),this.isPublic&&this.doCoreAndRunActions("set_interactivity")}postLoad(){this.doCoreAndRunActions("set_mapresize"),this.doCoreAndRunActions("set_terrain"),this.doCoreAndRunActions("set_mapfeatures"),this.doCoreAndRunActions("define_markers"),this.setControls(),this.doCoreAndRunActions("set_clustering"),this.doCoreAndRunActions("set_loaderdone"),this.doCoreAndRunActions("set_customscripts")}setControls(){this.doCoreAndRunActions("define_controls.zoomControl"),this.doCoreAndRunActions("define_controls.geocoderControl"),this.doCoreAndRunActions("define_controls.directionsControl"),this.doCoreAndRunActions("define_controls.3dControl"),this.doCoreAndRunActions("define_controls.scaleControl"),this.doCoreAndRunActions("define_controls.geolocationControl"),this.doCoreAndRunActions("define_controls.fullscreenControl"),this.doCoreAndRunActions("define_controls.customSearchControl"),this.doCoreAndRunActions("define_controls.filterDropdownControl"),this.doCoreAndRunActions("define_controls.categoryFilterControl"),this.doCoreAndRunActions("define_controls.listControl")}idleReload(e,t){e.map.once("idle",(()=>{t.doCoreAndRunActions("set_loader"),t.doCoreAndRunActions("set_terrain"),t.doCoreAndRunActions("set_mapfeatures"),t.doCoreAndRunActions("define_markers"),t.doCoreAndRunActions("set_clustering"),t.doCoreAndRunActions("set_loaderdone")}))}setLayerEvents(e,t){["symbol","circle","line","fill"].forEach((o=>{e.map.on("click",o,(o=>{e.clickedEvent=o,t.doCoreAndRunActions("define_clickedFeature"),t.doCoreAndRunActions("set_storelocatorclick"),t.doCoreAndRunActions("set_sidebarclick"),t.doCoreAndRunActions("set_externallink"),t.doCoreAndRunActions("define_clickedPopup")})),e.map.on("mousemove",o,(o=>{e.hoveredEvent=o,t.doCoreAndRunActions("define_hoveredFeature"),t.doCoreAndRunActions("define_hoveredPopup")})),e.map.on("mouseout",o,(e=>{t.doCoreAndRunActions("set_hoveredPopupOff")}))}))}setMarkerEvents(e,t){e.markers.forEach((o=>{o.getElement().addEventListener("click",(()=>{e.clickedMarker=o,t.doCoreAndRunActions("define_clickedFeature_fromMarker"),t.doCoreAndRunActions("set_storelocatorclick"),t.doCoreAndRunActions("set_sidebarclick"),t.doCoreAndRunActions("set_externallink"),t.doCoreAndRunActions("set_clickedPopup_fromMarker")})),o.getElement().addEventListener("mouseenter",(r=>{e.hoveredMarker=o,t.doCoreAndRunActions("define_hoveredFeature_fromMarker"),t.doCoreAndRunActions("set_hoveredPopup_fromMarker")})),o.getElement().addEventListener("mouseleave",(e=>{t.doCoreAndRunActions("set_hoveredPopupOff_fromMarker")}))}))}doCoreAndRunActions(e){return this.MapsterContainer.doCore(e)}runHookActions(e,t){if(window.mwm){const r=`${this.MapsterContainer.core[e].hook}/mapster-${this.isPublic?this.post_id:"admin"}`;if(window.mwm.actions[r]){window.mwm.actions[r].funcs;if(window.mwm.actions[r].funcs.length>0)for(var o=0;o<window.mwm.actions[r].funcs.length;o++)window.mwm.actions[r].funcs[o].func(t)}}}registerAdminEventListeners(){this.MapsterContainer.registerListener('.acf-field[data-name="zoom_on_scroll"] :input',"check","postResponse.map.zoom_on_scroll"),this.MapsterContainer.registerListener('.acf-field[data-name="interactivity"] :input',"check","postResponse.map.interactivity"),this.MapsterContainer.registerListener('.acf-field[data-name="open_popups_in_sidebar"] :input',"check","postResponse.map.open_popups_in_sidebar"),this.MapsterContainer.registerListener('.acf-field[data-name="zoom_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.zoom_control.enable",["define_controls.zoomControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="zoom_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.zoom_control.position",["define_controls.zoomControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="3d_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.3d_control.enable",["define_controls.3dControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="3d_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.3d_control.position",["define_controls.3dControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="scale_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.scale_control.enable",["define_controls.scaleControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="scale_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.scale_control.position",["define_controls.scaleControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="geolocation_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.geolocation_control.enable",["define_controls.geolocationControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="geolocation_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.geolocation_control.position",["define_controls.geolocationControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="fullscreen_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.fullscreen_control.enable",["define_controls.fullscreenControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="fullscreen_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.fullscreen_control.position",["define_controls.fullscreenControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="geocoder_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.geocoder_control.enable",["define_controls.geocoderControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="geocoder_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.geocoder_control.position",["define_controls.geocoderControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="geocoder_control"] .acf-field[data-name="limit_results"] :input',"val","postResponse.map.geocoder_control.limit_results",["define_controls.geocoderControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="directions_control"] .acf-field[data-name="enable"] :input',"check","postResponse.map.directions_control.enable",["define_controls.directionsControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="directions_control"] .acf-field[data-name="position"] :input',"val","postResponse.map.directions_control.position",["define_controls.directionsControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="directions_control"] .acf-field[data-name="unit"] :input',"val","postResponse.map.directions_control.unit",["define_controls.directionsControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="directions_control"] .acf-field[data-name="profile"] :input',"val","postResponse.map.directions_control.profile",["define_controls.directionsControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="directions_control"] .acf-field[data-name="placeholderOrigin"] :input',"val","postResponse.map.directions_control.placeholderOrigin",["define_controls.directionsControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="custom_search_filter"] .acf-field[data-name="enable"] :input',"check","postResponse.map.filter.custom_search_filter.enable",["define_controls.customSearchControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="custom_search_filter"] .acf-field[data-name="position"] :input',"val","postResponse.map.filter.custom_search_filter.position",["define_controls.customSearchControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="custom_search_filter"] .acf-field[data-name="include_geocoder"] :input',"check","postResponse.map.filter.custom_search_filter.include_geocoder",["define_controls.customSearchControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="custom_search_filter"] .acf-field[data-name="countries"] :input',"val","postResponse.map.filter.custom_search_filter.countries",["define_controls.customSearchControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="filter_dropdown"] .acf-field[data-name="enable"] :input',"check","postResponse.map.filter.filter_dropdown.enable",["define_controls.filterDropdownControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="filter_dropdown"] .acf-field[data-name="position"] :input',"val","postResponse.map.filter.filter_dropdown.position",["define_controls.filterDropdownControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="filter_dropdown"] .acf-field[data-name="placeholder"] :input',"val","postResponse.map.filter.filter_dropdown.placeholder",["define_controls.filterDropdownControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="enable"] :input',"check","postResponse.map.filter.category_filter.enable",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="position"] :input',"val","postResponse.map.filter.category_filter.position",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="initial_visibility"] :input',"check","postResponse.map.filter.category_filter.initial_visibility",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="functionality"] :input',"val","postResponse.map.filter.category_filter.functionality",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="independent_children"] :input',"check","postResponse.map.filter.category_filter.independent_children",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="category_display"] :input',"val","postResponse.map.filter.category_filter.category_display",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="checkbox_display"] :input',"val","postResponse.map.filter.category_filter.checkbox_display",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="category_filter"] .acf-field[data-name="pre_selected_categories"] :input',"val","postResponse.map.filter.category_filter.pre_selected_categories",["define_controls.categoryFilterControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="enable"] :input',"check","postResponse.map.list.enable",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="position"] :input',"val","postResponse.map.list.position",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="units"] :input',"val","postResponse.map.list.units",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="show_distance"] :input',"check","postResponse.map.list.show_distance",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="sort_by_distance"] :input',"check","postResponse.map.list.sort_by_distance",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="listing_type"] :input',"val","postResponse.map.list.listing_type",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="number_of_locations"] :input',"val","postResponse.map.list.number_of_locations",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="store_locator_options"] .acf-field[data-name="enable"] :input',"check","postResponse.map.list.store_locator_options.enable",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="list"] .acf-field[data-name="store_locator_options"] .acf-field[data-name="sort_hours_by_day"] :input',"check","postResponse.map.list.store_locator_options.sort_hours_by_day",["define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="locations"] select',"select","postResponseAdmin.locations_ids",["define_adminFeatures","define_postResponse.locations","set_mapfeatures","define_markers","define_controls.customSearchControl","define_controls.filterDropdownControl","define_controls.categoryFilterControl","define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="lines"] select',"select","postResponseAdmin.lines_ids",["define_adminFeatures","define_postResponse.lines","set_mapfeatures","define_markers","define_controls.customSearchControl","define_controls.filterDropdownControl","define_controls.categoryFilterControl","define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="polygons"] select',"select","postResponseAdmin.polygons_ids",["define_adminFeatures","define_postResponse.polygons","set_mapfeatures","define_markers","define_controls.customSearchControl","define_controls.filterDropdownControl","define_controls.categoryFilterControl","define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="add_by_category"] select',"select","postResponse.cats",["define_adminFeatures","define_postResponse.locations","define_postResponse.lines","define_postResponse.polygons","set_mapfeatures","define_markers","define_controls.customSearchControl","define_controls.filterDropdownControl","define_controls.categoryFilterControl","define_controls.listControl"]),this.MapsterContainer.registerListener('.acf-field[data-name="manual_latitude"] :input',"val","postResponse.map.view.manual_latitude"),this.MapsterContainer.registerListener('.acf-field[data-name="manual_longitude"] :input',"val","postResponse.map.view.manual_longitude"),this.MapsterContainer.registerListener('.acf-field[data-name="manual_zoom"] :input',"val","postResponse.map.view.manual_zoom"),this.MapsterContainer.registerListener('.acf-field[data-name="initial_load"] :input',"val","postResponse.map.view.initial_load"),this.MapsterContainer.registerListener('.acf-field[data-name="circle_clustering"] :input',"check","postResponse.map.circle_clustering"),this.MapsterContainer.registerListener('.acf-field[data-name="label_icon_clustering"] :input',"check","postResponse.map.label_icon_clustering"),this.MapsterContainer.registerListener('.acf-field[data-name="map_provider"] :input',"val","postResponse.map.map_type.map_provider",["define_mapLibrary"]),this.MapsterContainer.registerListener('.acf-field[data-name="map_tile_style_access_token"] :input',"val","postResponse.map.map_type.map_tile_style_access_token",["set_mapstyle"]),this.MapsterContainer.registerListener('.acf-field[data-name="map_tile_style_no_access_token"] :input',"val","postResponse.map.map_type.map_tile_style_no_access_token",["set_mapstyle"]),this.MapsterContainer.registerListener('.acf-field[data-name="access_token"] :input',"val","postResponse.map.map_type.access_token"),this.MapsterContainer.registerListener('.acf-field[data-name="custom_mapbox_style"] :input',"val","postResponse.map.map_type.custom_mapbox_style",["set_mapstyle"]),this.MapsterContainer.registerListener('.acf-field[data-name="duplicate_horizontally"] :input',"check","postResponse.map.layout.duplicate_horizontally"),this.MapsterContainer.registerListener('.acf-field[data-name="terrain"] :input',"check","postResponse.map.map_type.terrain",["set_terrain"])}}class MapsterPublic{constructor(){this.actions={}}add_action(e,t){this.actions[e]||(this.actions[e]={funcs:[]}),this.actions[e].funcs.push({func:t})}}window.mwm=new MapsterPublic,function(e){if(window.params.public)e(".mapster-wp-maps").each((function(){const t=e(this).attr("id").replace("mapster-wp-maps-",""),o=new MapsterMap(t,window.params.public),r=setInterval((()=>{0===window.params.loaded_plugins.filter((e=>!window[e])).length&&(clearInterval(r),o.init())}),100)}));else{console.log(document,document.body),document.body.classList.contains("block-editor-page")?e("#mapster-wp-maps-preview").prependTo("#normal-sortables"):e("#mapster-wp-maps-preview").prependTo("#acf_after_title-sortables");var t=acf.getFields().length,o=0,r=0;function a(e){if("select"!==e&&(o+=1),o===t&&4===r){const e=new MapsterMap("map",window.params.public),t=setInterval((()=>{0===window.params.loaded_plugins.filter((e=>!window[e])).length&&(clearInterval(t),console.log("init"),e.init())}),100)}}acf.add_action("ready_field",a),acf.addAction("select2_init",(function(e,t,o,s){r+=1,a("select")}))}}(jQuery);